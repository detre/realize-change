// Generated by CoffeeScript 1.6.3
(function() {
  var GlobalAnswer, GlobalQuestion, mongoose;

  mongoose = require('mongoose');

  GlobalAnswer = require('./../Models/User').GlobalAnswerSchema;

  GlobalQuestion = require('./../Models/User').GlobalQuestionSchema;

  exports.sendanswer = function(req, res) {
    var newGlobalAnswer;
    console.log("answerquery", req.query);
    newGlobalAnswer = new GlobalAnswer();
    newGlobalAnswer.answerFuture = req.query.answerFuture;
    newGlobalAnswer.answerGoals = req.query.answerGoals;
    newGlobalAnswer.save(function(err) {
      if (err) {
        throw err;
      }
    });
    return res.send({
      success: "success"
    });
  };

  exports.getanswers = function(req, res) {
    var randomAnswer;
    console.log("query", req.query);
    randomAnswer = function() {
      var rand;
      rand = 0;
      GlobalAnswer.count({}, function(err, num) {
        console.log("err", err);
        return rand = Math.floor(Math.random() * num);
      });
      return GlobalAnswer.find({}, function(err, choice) {
        return res.send({
          answers: [choice[rand]],
          filterNone: true
        });
      });
    };
    if (req.query.randomize === 'true') {
      return randomAnswer();
    } else if (req.query.future === 'true') {
      console.log('all dreams');
      return GlobalAnswer.find({}, function(err, answers) {
        var answer, answersToSend, _i, _len;
        console.log("err:", err);
        console.log("answer", answers);
        answersToSend = [];
        for (_i = 0, _len = answers.length; _i < _len; _i++) {
          answer = answers[_i];
          answersToSend.push({
            answerFuture: answer.answerFuture,
            filterFuture: "future"
          });
        }
        return res.send({
          answers: answersToSend
        });
      });
    }
  };

}).call(this);
